#!/bin/bash
#
# Script for easily proxy change in OS X
# Supports http/https/socks5/pac mode
# https://github.com/humiaozuzu/proxyit
#
# Code of the ini parse are copied from
# http://stackoverflow.com/questions/3724868/get-list-of-sections-from-ini-file-using-shell-sed-awk
#
# Code of getting OS X current active network service copied from
# http://hints.macworld.com/dlfiles/network_service_name.txt
#
# Change log
# v1.0 9-Jan-2012 First Release

ini_file=$HOME/.proxyit

usage() {
    echo -e "proxyit usage.\n"
    echo -e "proxyit list\n\t# list all available proxy settings"
    echo -e "proxyit set [item]\n\t# use [item] proxy setting"
    echo -e "proxyit unset\n\t# unset all proxy settings"

    echo -e "\nConfiguration format"
    echo "[linode]"
    echo "type=socks"
    echo "host=192.168.1.1"
    echo -e "port = 1018\n"

    echo "[buyvm]"
    echo "type=http"
    echo "host=172.12.222.123"
    echo -e "port=8101\n"

    echo "[mal]"
    echo "type=pac"
    echo "url=http://10.0.1.44/x.pac"
}

version() {
    echo "proxyit version 2.0"
}

list() {
    grep "^\[" $ini_file | xargs | tr -d '\[' | tr -d '\]'
}

ini_get() {
    eval `sed -e 's/[[:space:]]*\=[[:space:]]*/=/g' \
        -e 's/;.*$//' \
        -e 's/[[:space:]]*$//' \
        -e 's/^[[:space:]]*//' \
        -e "s/^\(.*\)=\([^\"']*\)$/\1=\"\2\"/" \
    < $ini_file \
    | sed -n -e "/^\[$1\]/,/^\s*\[/{/^[^;].*\=.*/p;}"`

    echo ${!2}
}

unset_proxy() {
    service=$(get_current_service)

    networksetup -setautoproxystate "$service" off
    networksetup -setwebproxystate "$service" off
    networksetup -setsecurewebproxystate "$service" off
    networksetup -setsocksfirewallproxystate "$service" off
}

get_current_service() {
    SERVICE_GUID=`echo "open|||get State:/Network/Global/IPv4|||d.show" | \
        tr '|||' '\n' | scutil | grep "PrimaryService" | awk '{print $3}'`

    SERVICE_NAME=`echo "open|||get Setup:/Network/Service/$SERVICE_GUID|||d.show" |\
        tr '|||' '\n' | scutil | grep "UserDefinedName" | awk -F': ' '{print $2}'`

    echo $SERVICE_NAME
}

set_proxy() {
    type=$(ini_get $1 type)

    host=$(ini_get $1 host)
    port=$(ini_get $1 port)
    url=$(ini_get $1 url)
    service=$(get_current_service)

    unset_proxy

    case $type in
        http )
            echo http
            networksetup -setsecurewebproxy "$service" $host $port
            networksetup -setwebproxy "$service" $host $port
            exit 1
            ;;
        socks )
            echo socks
            networksetup -setsocksfirewallproxy "$service" $host $port
            exit 1
            ;;
        pac )
            echo pac
            networksetup -setautoproxyurl "$service" $url
            exit 1
            ;;
    esac
}


# --- Main entry point ----------------------

if [ $# -eq 0 ]; then
    usage
    exit 0
fi

# Sanity check command-line options. We want either
# options like -l or arguments like Python, but not
# both
has_opts=0
has_args=0
for opt in $@; do
    if [ $( echo $opt | cut -c1) = "-" ]; then
        has_opts=1
    else
        has_args=1
    fi
done

if [ $has_opts -eq 1 -a $has_args -eq 1 ]; then
    usage
    exit 1
fi

# Parse comand-line options
while [ $# -gt 0 ]; do
    case $1 in
        -v | --version )
            version
            exit 1
            ;;
        list )
            list
            exit 1
            ;;
        set )
            set_proxy $2
            exit 1
            ;;
        unset )
            unset_proxy
            exit 1
            ;;
        -h | --help )
            usage
            exit 1
            ;;
        * ) # default case
            echo Unknown argument $1
            ;;
    esac
    shift
done
